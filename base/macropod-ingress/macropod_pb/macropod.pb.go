// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: macropod.proto

package macropod_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FunctionStruct struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Registry      string                 `protobuf:"bytes,1,opt,name=Registry,proto3" json:"Registry,omitempty"`
	Endpoints     map[string]string      `protobuf:"bytes,2,rep,name=Endpoints,proto3" json:"Endpoints,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Envs          map[string]string      `protobuf:"bytes,3,rep,name=Envs,proto3" json:"Envs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Secrets       map[string]string      `protobuf:"bytes,4,rep,name=Secrets,proto3" json:"Secrets,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FunctionStruct) Reset() {
	*x = FunctionStruct{}
	mi := &file_macropod_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FunctionStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionStruct) ProtoMessage() {}

func (x *FunctionStruct) ProtoReflect() protoreflect.Message {
	mi := &file_macropod_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionStruct.ProtoReflect.Descriptor instead.
func (*FunctionStruct) Descriptor() ([]byte, []int) {
	return file_macropod_proto_rawDescGZIP(), []int{0}
}

func (x *FunctionStruct) GetRegistry() string {
	if x != nil {
		return x.Registry
	}
	return ""
}

func (x *FunctionStruct) GetEndpoints() map[string]string {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *FunctionStruct) GetEnvs() map[string]string {
	if x != nil {
		return x.Envs
	}
	return nil
}

func (x *FunctionStruct) GetSecrets() map[string]string {
	if x != nil {
		return x.Secrets
	}
	return nil
}

type ConfigStruct struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Namespace         *string                `protobuf:"bytes,1,opt,name=Namespace,proto3,oneof" json:"Namespace,omitempty"`
	TTL               *int32                 `protobuf:"varint,2,opt,name=TTL,proto3,oneof" json:"TTL,omitempty"`
	Deployment        *string                `protobuf:"bytes,3,opt,name=Deployment,proto3,oneof" json:"Deployment,omitempty"`
	Communication     *string                `protobuf:"bytes,4,opt,name=Communication,proto3,oneof" json:"Communication,omitempty"`
	Aggregation       *string                `protobuf:"bytes,5,opt,name=Aggregation,proto3,oneof" json:"Aggregation,omitempty"`
	TargetConcurrency *int32                 `protobuf:"varint,6,opt,name=TargetConcurrency,proto3,oneof" json:"TargetConcurrency,omitempty"`
	Debug             *int32                 `protobuf:"varint,7,opt,name=Debug,proto3,oneof" json:"Debug,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ConfigStruct) Reset() {
	*x = ConfigStruct{}
	mi := &file_macropod_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigStruct) ProtoMessage() {}

func (x *ConfigStruct) ProtoReflect() protoreflect.Message {
	mi := &file_macropod_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigStruct.ProtoReflect.Descriptor instead.
func (*ConfigStruct) Descriptor() ([]byte, []int) {
	return file_macropod_proto_rawDescGZIP(), []int{1}
}

func (x *ConfigStruct) GetNamespace() string {
	if x != nil && x.Namespace != nil {
		return *x.Namespace
	}
	return ""
}

func (x *ConfigStruct) GetTTL() int32 {
	if x != nil && x.TTL != nil {
		return *x.TTL
	}
	return 0
}

func (x *ConfigStruct) GetDeployment() string {
	if x != nil && x.Deployment != nil {
		return *x.Deployment
	}
	return ""
}

func (x *ConfigStruct) GetCommunication() string {
	if x != nil && x.Communication != nil {
		return *x.Communication
	}
	return ""
}

func (x *ConfigStruct) GetAggregation() string {
	if x != nil && x.Aggregation != nil {
		return *x.Aggregation
	}
	return ""
}

func (x *ConfigStruct) GetTargetConcurrency() int32 {
	if x != nil && x.TargetConcurrency != nil {
		return *x.TargetConcurrency
	}
	return 0
}

func (x *ConfigStruct) GetDebug() int32 {
	if x != nil && x.Debug != nil {
		return *x.Debug
	}
	return 0
}

type EvalStruct struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Name                  string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	WorkflowConcurrencies []int32                `protobuf:"varint,2,rep,packed,name=WorkflowConcurrencies,proto3" json:"WorkflowConcurrencies,omitempty"`
	Invocations           *int32                 `protobuf:"varint,3,opt,name=Invocations,proto3,oneof" json:"Invocations,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *EvalStruct) Reset() {
	*x = EvalStruct{}
	mi := &file_macropod_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EvalStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvalStruct) ProtoMessage() {}

func (x *EvalStruct) ProtoReflect() protoreflect.Message {
	mi := &file_macropod_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvalStruct.ProtoReflect.Descriptor instead.
func (*EvalStruct) Descriptor() ([]byte, []int) {
	return file_macropod_proto_rawDescGZIP(), []int{2}
}

func (x *EvalStruct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EvalStruct) GetWorkflowConcurrencies() []int32 {
	if x != nil {
		return x.WorkflowConcurrencies
	}
	return nil
}

func (x *EvalStruct) GetInvocations() int32 {
	if x != nil && x.Invocations != nil {
		return *x.Invocations
	}
	return 0
}

type WorkflowStruct struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Name          string                     `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Functions     map[string]*FunctionStruct `protobuf:"bytes,2,rep,name=Functions,proto3" json:"Functions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Text          []string                   `protobuf:"bytes,3,rep,name=Text,proto3" json:"Text,omitempty"`
	JSON          []*structpb.Struct         `protobuf:"bytes,4,rep,name=JSON,proto3" json:"JSON,omitempty"`
	Data          [][]byte                   `protobuf:"bytes,5,rep,name=Data,proto3" json:"Data,omitempty"`
	Config        *ConfigStruct              `protobuf:"bytes,6,opt,name=Config,proto3,oneof" json:"Config,omitempty"`
	Eval          *EvalStruct                `protobuf:"bytes,7,opt,name=Eval,proto3,oneof" json:"Eval,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkflowStruct) Reset() {
	*x = WorkflowStruct{}
	mi := &file_macropod_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowStruct) ProtoMessage() {}

func (x *WorkflowStruct) ProtoReflect() protoreflect.Message {
	mi := &file_macropod_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowStruct.ProtoReflect.Descriptor instead.
func (*WorkflowStruct) Descriptor() ([]byte, []int) {
	return file_macropod_proto_rawDescGZIP(), []int{3}
}

func (x *WorkflowStruct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkflowStruct) GetFunctions() map[string]*FunctionStruct {
	if x != nil {
		return x.Functions
	}
	return nil
}

func (x *WorkflowStruct) GetText() []string {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *WorkflowStruct) GetJSON() []*structpb.Struct {
	if x != nil {
		return x.JSON
	}
	return nil
}

func (x *WorkflowStruct) GetData() [][]byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *WorkflowStruct) GetConfig() *ConfigStruct {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *WorkflowStruct) GetEval() *EvalStruct {
	if x != nil {
		return x.Eval
	}
	return nil
}

type PodMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,opt,name=Name,proto3,oneof" json:"Name,omitempty"`
	Version       *int32                 `protobuf:"varint,2,opt,name=Version,proto3,oneof" json:"Version,omitempty"`
	Entrypoint    *string                `protobuf:"bytes,3,opt,name=Entrypoint,proto3,oneof" json:"Entrypoint,omitempty"`
	NodeName      *string                `protobuf:"bytes,4,opt,name=NodeName,proto3,oneof" json:"NodeName,omitempty"`
	Functions     []string               `protobuf:"bytes,5,rep,name=Functions,proto3" json:"Functions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PodMetadata) Reset() {
	*x = PodMetadata{}
	mi := &file_macropod_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PodMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodMetadata) ProtoMessage() {}

func (x *PodMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_macropod_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodMetadata.ProtoReflect.Descriptor instead.
func (*PodMetadata) Descriptor() ([]byte, []int) {
	return file_macropod_proto_rawDescGZIP(), []int{4}
}

func (x *PodMetadata) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *PodMetadata) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *PodMetadata) GetEntrypoint() string {
	if x != nil && x.Entrypoint != nil {
		return *x.Entrypoint
	}
	return ""
}

func (x *PodMetadata) GetNodeName() string {
	if x != nil && x.NodeName != nil {
		return *x.NodeName
	}
	return ""
}

func (x *PodMetadata) GetFunctions() []string {
	if x != nil {
		return x.Functions
	}
	return nil
}

type DeploymentMetadata struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ID                 int32                  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Entrypoint         *string                `protobuf:"bytes,2,opt,name=Entrypoint,proto3,oneof" json:"Entrypoint,omitempty"`
	Pods               []*PodMetadata         `protobuf:"bytes,3,rep,name=Pods,proto3" json:"Pods,omitempty"`
	InvocationsCurrent *int32                 `protobuf:"varint,4,opt,name=InvocationsCurrent,proto3,oneof" json:"InvocationsCurrent,omitempty"`
	LastUsed           *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=LastUsed,proto3,oneof" json:"LastUsed,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *DeploymentMetadata) Reset() {
	*x = DeploymentMetadata{}
	mi := &file_macropod_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeploymentMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentMetadata) ProtoMessage() {}

func (x *DeploymentMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_macropod_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentMetadata.ProtoReflect.Descriptor instead.
func (*DeploymentMetadata) Descriptor() ([]byte, []int) {
	return file_macropod_proto_rawDescGZIP(), []int{5}
}

func (x *DeploymentMetadata) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *DeploymentMetadata) GetEntrypoint() string {
	if x != nil && x.Entrypoint != nil {
		return *x.Entrypoint
	}
	return ""
}

func (x *DeploymentMetadata) GetPods() []*PodMetadata {
	if x != nil {
		return x.Pods
	}
	return nil
}

func (x *DeploymentMetadata) GetInvocationsCurrent() int32 {
	if x != nil && x.InvocationsCurrent != nil {
		return *x.InvocationsCurrent
	}
	return 0
}

func (x *DeploymentMetadata) GetLastUsed() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUsed
	}
	return nil
}

type WorkflowMetadata struct {
	state              protoimpl.MessageState         `protogen:"open.v1"`
	Workflow           *WorkflowStruct                `protobuf:"bytes,1,opt,name=Workflow,proto3" json:"Workflow,omitempty"`
	DeploymentConfig   *DeploymentMetadata            `protobuf:"bytes,2,opt,name=DeploymentConfig,proto3" json:"DeploymentConfig,omitempty"`
	Deployments        map[string]*DeploymentMetadata `protobuf:"bytes,3,rep,name=Deployments,proto3" json:"Deployments,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	DeploymentsTotal   *int32                         `protobuf:"varint,4,opt,name=DeploymentsTotal,proto3,oneof" json:"DeploymentsTotal,omitempty"`
	LatestVersion      *int32                         `protobuf:"varint,5,opt,name=LatestVersion,proto3,oneof" json:"LatestVersion,omitempty"`
	LastUpdated        *timestamppb.Timestamp         `protobuf:"bytes,6,opt,name=LastUpdated,proto3,oneof" json:"LastUpdated,omitempty"`
	InvocationsCurrent *int32                         `protobuf:"varint,7,opt,name=InvocationsCurrent,proto3,oneof" json:"InvocationsCurrent,omitempty"`
	InvocationsTotal   *int32                         `protobuf:"varint,8,opt,name=InvocationsTotal,proto3,oneof" json:"InvocationsTotal,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *WorkflowMetadata) Reset() {
	*x = WorkflowMetadata{}
	mi := &file_macropod_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowMetadata) ProtoMessage() {}

func (x *WorkflowMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_macropod_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowMetadata.ProtoReflect.Descriptor instead.
func (*WorkflowMetadata) Descriptor() ([]byte, []int) {
	return file_macropod_proto_rawDescGZIP(), []int{6}
}

func (x *WorkflowMetadata) GetWorkflow() *WorkflowStruct {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *WorkflowMetadata) GetDeploymentConfig() *DeploymentMetadata {
	if x != nil {
		return x.DeploymentConfig
	}
	return nil
}

func (x *WorkflowMetadata) GetDeployments() map[string]*DeploymentMetadata {
	if x != nil {
		return x.Deployments
	}
	return nil
}

func (x *WorkflowMetadata) GetDeploymentsTotal() int32 {
	if x != nil && x.DeploymentsTotal != nil {
		return *x.DeploymentsTotal
	}
	return 0
}

func (x *WorkflowMetadata) GetLatestVersion() int32 {
	if x != nil && x.LatestVersion != nil {
		return *x.LatestVersion
	}
	return 0
}

func (x *WorkflowMetadata) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *WorkflowMetadata) GetInvocationsCurrent() int32 {
	if x != nil && x.InvocationsCurrent != nil {
		return *x.InvocationsCurrent
	}
	return 0
}

func (x *WorkflowMetadata) GetInvocationsTotal() int32 {
	if x != nil && x.InvocationsTotal != nil {
		return *x.InvocationsTotal
	}
	return 0
}

type WorkflowIngressMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowName  string                 `protobuf:"bytes,1,opt,name=WorkflowName,proto3" json:"WorkflowName,omitempty"`
	Ingresses     map[int32]string       `protobuf:"bytes,2,rep,name=Ingresses,proto3" json:"Ingresses,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Labels        map[int32]string       `protobuf:"bytes,3,rep,name=Labels,proto3" json:"Labels,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkflowIngressMetadata) Reset() {
	*x = WorkflowIngressMetadata{}
	mi := &file_macropod_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowIngressMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowIngressMetadata) ProtoMessage() {}

func (x *WorkflowIngressMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_macropod_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowIngressMetadata.ProtoReflect.Descriptor instead.
func (*WorkflowIngressMetadata) Descriptor() ([]byte, []int) {
	return file_macropod_proto_rawDescGZIP(), []int{7}
}

func (x *WorkflowIngressMetadata) GetWorkflowName() string {
	if x != nil {
		return x.WorkflowName
	}
	return ""
}

func (x *WorkflowIngressMetadata) GetIngresses() map[int32]string {
	if x != nil {
		return x.Ingresses
	}
	return nil
}

func (x *WorkflowIngressMetadata) GetLabels() map[int32]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type FunctionIngressMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FunctionName  string                 `protobuf:"bytes,1,opt,name=FunctionName,proto3" json:"FunctionName,omitempty"`
	WorkflowName  string                 `protobuf:"bytes,2,opt,name=WorkflowName,proto3" json:"WorkflowName,omitempty"`
	Ingresses     map[int32]string       `protobuf:"bytes,3,rep,name=Ingresses,proto3" json:"Ingresses,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Labels        map[int32]string       `protobuf:"bytes,4,rep,name=Labels,proto3" json:"Labels,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FunctionIngressMetadata) Reset() {
	*x = FunctionIngressMetadata{}
	mi := &file_macropod_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FunctionIngressMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionIngressMetadata) ProtoMessage() {}

func (x *FunctionIngressMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_macropod_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionIngressMetadata.ProtoReflect.Descriptor instead.
func (*FunctionIngressMetadata) Descriptor() ([]byte, []int) {
	return file_macropod_proto_rawDescGZIP(), []int{8}
}

func (x *FunctionIngressMetadata) GetFunctionName() string {
	if x != nil {
		return x.FunctionName
	}
	return ""
}

func (x *FunctionIngressMetadata) GetWorkflowName() string {
	if x != nil {
		return x.WorkflowName
	}
	return ""
}

func (x *FunctionIngressMetadata) GetIngresses() map[int32]string {
	if x != nil {
		return x.Ingresses
	}
	return nil
}

func (x *FunctionIngressMetadata) GetLabels() map[int32]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type NodeMetricsMetadata struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CPU            float64                `protobuf:"fixed64,1,opt,name=CPU,proto3" json:"CPU,omitempty"`
	Memory         float64                `protobuf:"fixed64,2,opt,name=Memory,proto3" json:"Memory,omitempty"`
	CPUCapacity    float64                `protobuf:"fixed64,3,opt,name=CPUCapacity,proto3" json:"CPUCapacity,omitempty"`
	MemoryCapacity float64                `protobuf:"fixed64,4,opt,name=MemoryCapacity,proto3" json:"MemoryCapacity,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *NodeMetricsMetadata) Reset() {
	*x = NodeMetricsMetadata{}
	mi := &file_macropod_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeMetricsMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeMetricsMetadata) ProtoMessage() {}

func (x *NodeMetricsMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_macropod_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeMetricsMetadata.ProtoReflect.Descriptor instead.
func (*NodeMetricsMetadata) Descriptor() ([]byte, []int) {
	return file_macropod_proto_rawDescGZIP(), []int{9}
}

func (x *NodeMetricsMetadata) GetCPU() float64 {
	if x != nil {
		return x.CPU
	}
	return 0
}

func (x *NodeMetricsMetadata) GetMemory() float64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *NodeMetricsMetadata) GetCPUCapacity() float64 {
	if x != nil {
		return x.CPUCapacity
	}
	return 0
}

func (x *NodeMetricsMetadata) GetMemoryCapacity() float64 {
	if x != nil {
		return x.MemoryCapacity
	}
	return 0
}

type MacroPodManifest struct {
	state             protoimpl.MessageState              `protogen:"open.v1"`
	Workflows         map[string]*WorkflowMetadata        `protobuf:"bytes,1,rep,name=Workflows,proto3" json:"Workflows,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	WorkflowIngresses map[string]*WorkflowIngressMetadata `protobuf:"bytes,2,rep,name=WorkflowIngresses,proto3" json:"WorkflowIngresses,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	FunctionIngresses map[string]*FunctionIngressMetadata `protobuf:"bytes,3,rep,name=FunctionIngresses,proto3" json:"FunctionIngresses,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	NodeMetrics       map[string]*NodeMetricsMetadata     `protobuf:"bytes,4,rep,name=NodeMetrics,proto3" json:"NodeMetrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	DefaultConfig     *ConfigStruct                       `protobuf:"bytes,5,opt,name=DefaultConfig,proto3" json:"DefaultConfig,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *MacroPodManifest) Reset() {
	*x = MacroPodManifest{}
	mi := &file_macropod_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MacroPodManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MacroPodManifest) ProtoMessage() {}

func (x *MacroPodManifest) ProtoReflect() protoreflect.Message {
	mi := &file_macropod_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MacroPodManifest.ProtoReflect.Descriptor instead.
func (*MacroPodManifest) Descriptor() ([]byte, []int) {
	return file_macropod_proto_rawDescGZIP(), []int{10}
}

func (x *MacroPodManifest) GetWorkflows() map[string]*WorkflowMetadata {
	if x != nil {
		return x.Workflows
	}
	return nil
}

func (x *MacroPodManifest) GetWorkflowIngresses() map[string]*WorkflowIngressMetadata {
	if x != nil {
		return x.WorkflowIngresses
	}
	return nil
}

func (x *MacroPodManifest) GetFunctionIngresses() map[string]*FunctionIngressMetadata {
	if x != nil {
		return x.FunctionIngresses
	}
	return nil
}

func (x *MacroPodManifest) GetNodeMetrics() map[string]*NodeMetricsMetadata {
	if x != nil {
		return x.NodeMetrics
	}
	return nil
}

func (x *MacroPodManifest) GetDefaultConfig() *ConfigStruct {
	if x != nil {
		return x.DefaultConfig
	}
	return nil
}

type MacroPodReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reply         *string                `protobuf:"bytes,1,opt,name=Reply,proto3,oneof" json:"Reply,omitempty"`
	Code          *int32                 `protobuf:"varint,2,opt,name=Code,proto3,oneof" json:"Code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MacroPodReply) Reset() {
	*x = MacroPodReply{}
	mi := &file_macropod_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MacroPodReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MacroPodReply) ProtoMessage() {}

func (x *MacroPodReply) ProtoReflect() protoreflect.Message {
	mi := &file_macropod_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MacroPodReply.ProtoReflect.Descriptor instead.
func (*MacroPodReply) Descriptor() ([]byte, []int) {
	return file_macropod_proto_rawDescGZIP(), []int{11}
}

func (x *MacroPodReply) GetReply() string {
	if x != nil && x.Reply != nil {
		return *x.Reply
	}
	return ""
}

func (x *MacroPodReply) GetCode() int32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

type FunctionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Function      *string                `protobuf:"bytes,1,opt,name=Function,proto3,oneof" json:"Function,omitempty"`
	Text          *string                `protobuf:"bytes,2,opt,name=Text,proto3,oneof" json:"Text,omitempty"`
	JSON          *structpb.Struct       `protobuf:"bytes,3,opt,name=JSON,proto3,oneof" json:"JSON,omitempty"`
	Data          []byte                 `protobuf:"bytes,4,opt,name=Data,proto3,oneof" json:"Data,omitempty"`
	WorkflowID    *string                `protobuf:"bytes,5,opt,name=WorkflowID,proto3,oneof" json:"WorkflowID,omitempty"`
	Depth         *int32                 `protobuf:"varint,6,opt,name=Depth,proto3,oneof" json:"Depth,omitempty"`
	Width         *int32                 `protobuf:"varint,7,opt,name=Width,proto3,oneof" json:"Width,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FunctionRequest) Reset() {
	*x = FunctionRequest{}
	mi := &file_macropod_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FunctionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionRequest) ProtoMessage() {}

func (x *FunctionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_macropod_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionRequest.ProtoReflect.Descriptor instead.
func (*FunctionRequest) Descriptor() ([]byte, []int) {
	return file_macropod_proto_rawDescGZIP(), []int{12}
}

func (x *FunctionRequest) GetFunction() string {
	if x != nil && x.Function != nil {
		return *x.Function
	}
	return ""
}

func (x *FunctionRequest) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *FunctionRequest) GetJSON() *structpb.Struct {
	if x != nil {
		return x.JSON
	}
	return nil
}

func (x *FunctionRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FunctionRequest) GetWorkflowID() string {
	if x != nil && x.WorkflowID != nil {
		return *x.WorkflowID
	}
	return ""
}

func (x *FunctionRequest) GetDepth() int32 {
	if x != nil && x.Depth != nil {
		return *x.Depth
	}
	return 0
}

func (x *FunctionRequest) GetWidth() int32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

type DeployerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowName  string                 `protobuf:"bytes,1,opt,name=WorkflowName,proto3" json:"WorkflowName,omitempty"`
	Label         *string                `protobuf:"bytes,2,opt,name=Label,proto3,oneof" json:"Label,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeployerRequest) Reset() {
	*x = DeployerRequest{}
	mi := &file_macropod_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeployerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployerRequest) ProtoMessage() {}

func (x *DeployerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_macropod_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployerRequest.ProtoReflect.Descriptor instead.
func (*DeployerRequest) Descriptor() ([]byte, []int) {
	return file_macropod_proto_rawDescGZIP(), []int{13}
}

func (x *DeployerRequest) GetWorkflowName() string {
	if x != nil {
		return x.WorkflowName
	}
	return ""
}

func (x *DeployerRequest) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

type IngressRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowName  string                 `protobuf:"bytes,1,opt,name=WorkflowName,proto3" json:"WorkflowName,omitempty"`
	Text          *string                `protobuf:"bytes,2,opt,name=Text,proto3,oneof" json:"Text,omitempty"`
	JSON          *structpb.Struct       `protobuf:"bytes,3,opt,name=JSON,proto3,oneof" json:"JSON,omitempty"`
	Data          []byte                 `protobuf:"bytes,4,opt,name=Data,proto3,oneof" json:"Data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IngressRequest) Reset() {
	*x = IngressRequest{}
	mi := &file_macropod_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IngressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngressRequest) ProtoMessage() {}

func (x *IngressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_macropod_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngressRequest.ProtoReflect.Descriptor instead.
func (*IngressRequest) Descriptor() ([]byte, []int) {
	return file_macropod_proto_rawDescGZIP(), []int{14}
}

func (x *IngressRequest) GetWorkflowName() string {
	if x != nil {
		return x.WorkflowName
	}
	return ""
}

func (x *IngressRequest) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *IngressRequest) GetJSON() *structpb.Struct {
	if x != nil {
		return x.JSON
	}
	return nil
}

func (x *IngressRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type IngressEvalRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IngressEvalRequest) Reset() {
	*x = IngressEvalRequest{}
	mi := &file_macropod_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IngressEvalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngressEvalRequest) ProtoMessage() {}

func (x *IngressEvalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_macropod_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngressEvalRequest.ProtoReflect.Descriptor instead.
func (*IngressEvalRequest) Descriptor() ([]byte, []int) {
	return file_macropod_proto_rawDescGZIP(), []int{15}
}

func (x *IngressEvalRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type DeploymentServiceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FunctionCall  string                 `protobuf:"bytes,2,opt,name=functionCall,proto3" json:"functionCall,omitempty"`
	ReplicaNumber int32                  `protobuf:"varint,3,opt,name=replicaNumber,proto3" json:"replicaNumber,omitempty"`
	Workflow      *string                `protobuf:"bytes,4,opt,name=workflow,proto3,oneof" json:"workflow,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeploymentServiceRequest) Reset() {
	*x = DeploymentServiceRequest{}
	mi := &file_macropod_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeploymentServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentServiceRequest) ProtoMessage() {}

func (x *DeploymentServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_macropod_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentServiceRequest.ProtoReflect.Descriptor instead.
func (*DeploymentServiceRequest) Descriptor() ([]byte, []int) {
	return file_macropod_proto_rawDescGZIP(), []int{16}
}

func (x *DeploymentServiceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeploymentServiceRequest) GetFunctionCall() string {
	if x != nil {
		return x.FunctionCall
	}
	return ""
}

func (x *DeploymentServiceRequest) GetReplicaNumber() int32 {
	if x != nil {
		return x.ReplicaNumber
	}
	return 0
}

func (x *DeploymentServiceRequest) GetWorkflow() string {
	if x != nil && x.Workflow != nil {
		return *x.Workflow
	}
	return ""
}

type DeploymentServiceReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeploymentServiceReply) Reset() {
	*x = DeploymentServiceReply{}
	mi := &file_macropod_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeploymentServiceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentServiceReply) ProtoMessage() {}

func (x *DeploymentServiceReply) ProtoReflect() protoreflect.Message {
	mi := &file_macropod_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentServiceReply.ProtoReflect.Descriptor instead.
func (*DeploymentServiceReply) Descriptor() ([]byte, []int) {
	return file_macropod_proto_rawDescGZIP(), []int{17}
}

func (x *DeploymentServiceReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_macropod_proto protoreflect.FileDescriptor

const file_macropod_proto_rawDesc = "" +
	"\n" +
	"\x0emacropod.proto\x12\bmacropod\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/protobuf/struct.proto\"\x9f\x03\n" +
	"\x0eFunctionStruct\x12\x1a\n" +
	"\bRegistry\x18\x01 \x01(\tR\bRegistry\x12E\n" +
	"\tEndpoints\x18\x02 \x03(\v2'.macropod.FunctionStruct.EndpointsEntryR\tEndpoints\x126\n" +
	"\x04Envs\x18\x03 \x03(\v2\".macropod.FunctionStruct.EnvsEntryR\x04Envs\x12?\n" +
	"\aSecrets\x18\x04 \x03(\v2%.macropod.FunctionStruct.SecretsEntryR\aSecrets\x1a<\n" +
	"\x0eEndpointsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a7\n" +
	"\tEnvsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a:\n" +
	"\fSecretsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf4\x02\n" +
	"\fConfigStruct\x12!\n" +
	"\tNamespace\x18\x01 \x01(\tH\x00R\tNamespace\x88\x01\x01\x12\x15\n" +
	"\x03TTL\x18\x02 \x01(\x05H\x01R\x03TTL\x88\x01\x01\x12#\n" +
	"\n" +
	"Deployment\x18\x03 \x01(\tH\x02R\n" +
	"Deployment\x88\x01\x01\x12)\n" +
	"\rCommunication\x18\x04 \x01(\tH\x03R\rCommunication\x88\x01\x01\x12%\n" +
	"\vAggregation\x18\x05 \x01(\tH\x04R\vAggregation\x88\x01\x01\x121\n" +
	"\x11TargetConcurrency\x18\x06 \x01(\x05H\x05R\x11TargetConcurrency\x88\x01\x01\x12\x19\n" +
	"\x05Debug\x18\a \x01(\x05H\x06R\x05Debug\x88\x01\x01B\f\n" +
	"\n" +
	"_NamespaceB\x06\n" +
	"\x04_TTLB\r\n" +
	"\v_DeploymentB\x10\n" +
	"\x0e_CommunicationB\x0e\n" +
	"\f_AggregationB\x14\n" +
	"\x12_TargetConcurrencyB\b\n" +
	"\x06_Debug\"\x8d\x01\n" +
	"\n" +
	"EvalStruct\x12\x12\n" +
	"\x04Name\x18\x01 \x01(\tR\x04Name\x124\n" +
	"\x15WorkflowConcurrencies\x18\x02 \x03(\x05R\x15WorkflowConcurrencies\x12%\n" +
	"\vInvocations\x18\x03 \x01(\x05H\x00R\vInvocations\x88\x01\x01B\x0e\n" +
	"\f_Invocations\"\x90\x03\n" +
	"\x0eWorkflowStruct\x12\x12\n" +
	"\x04Name\x18\x01 \x01(\tR\x04Name\x12E\n" +
	"\tFunctions\x18\x02 \x03(\v2'.macropod.WorkflowStruct.FunctionsEntryR\tFunctions\x12\x12\n" +
	"\x04Text\x18\x03 \x03(\tR\x04Text\x12+\n" +
	"\x04JSON\x18\x04 \x03(\v2\x17.google.protobuf.StructR\x04JSON\x12\x12\n" +
	"\x04Data\x18\x05 \x03(\fR\x04Data\x123\n" +
	"\x06Config\x18\x06 \x01(\v2\x16.macropod.ConfigStructH\x00R\x06Config\x88\x01\x01\x12-\n" +
	"\x04Eval\x18\a \x01(\v2\x14.macropod.EvalStructH\x01R\x04Eval\x88\x01\x01\x1aV\n" +
	"\x0eFunctionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12.\n" +
	"\x05value\x18\x02 \x01(\v2\x18.macropod.FunctionStructR\x05value:\x028\x01B\t\n" +
	"\a_ConfigB\a\n" +
	"\x05_Eval\"\xda\x01\n" +
	"\vPodMetadata\x12\x17\n" +
	"\x04Name\x18\x01 \x01(\tH\x00R\x04Name\x88\x01\x01\x12\x1d\n" +
	"\aVersion\x18\x02 \x01(\x05H\x01R\aVersion\x88\x01\x01\x12#\n" +
	"\n" +
	"Entrypoint\x18\x03 \x01(\tH\x02R\n" +
	"Entrypoint\x88\x01\x01\x12\x1f\n" +
	"\bNodeName\x18\x04 \x01(\tH\x03R\bNodeName\x88\x01\x01\x12\x1c\n" +
	"\tFunctions\x18\x05 \x03(\tR\tFunctionsB\a\n" +
	"\x05_NameB\n" +
	"\n" +
	"\b_VersionB\r\n" +
	"\v_EntrypointB\v\n" +
	"\t_NodeName\"\x99\x02\n" +
	"\x12DeploymentMetadata\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\x05R\x02ID\x12#\n" +
	"\n" +
	"Entrypoint\x18\x02 \x01(\tH\x00R\n" +
	"Entrypoint\x88\x01\x01\x12)\n" +
	"\x04Pods\x18\x03 \x03(\v2\x15.macropod.PodMetadataR\x04Pods\x123\n" +
	"\x12InvocationsCurrent\x18\x04 \x01(\x05H\x01R\x12InvocationsCurrent\x88\x01\x01\x12;\n" +
	"\bLastUsed\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampH\x02R\bLastUsed\x88\x01\x01B\r\n" +
	"\v_EntrypointB\x15\n" +
	"\x13_InvocationsCurrentB\v\n" +
	"\t_LastUsed\"\xa7\x05\n" +
	"\x10WorkflowMetadata\x124\n" +
	"\bWorkflow\x18\x01 \x01(\v2\x18.macropod.WorkflowStructR\bWorkflow\x12H\n" +
	"\x10DeploymentConfig\x18\x02 \x01(\v2\x1c.macropod.DeploymentMetadataR\x10DeploymentConfig\x12M\n" +
	"\vDeployments\x18\x03 \x03(\v2+.macropod.WorkflowMetadata.DeploymentsEntryR\vDeployments\x12/\n" +
	"\x10DeploymentsTotal\x18\x04 \x01(\x05H\x00R\x10DeploymentsTotal\x88\x01\x01\x12)\n" +
	"\rLatestVersion\x18\x05 \x01(\x05H\x01R\rLatestVersion\x88\x01\x01\x12A\n" +
	"\vLastUpdated\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampH\x02R\vLastUpdated\x88\x01\x01\x123\n" +
	"\x12InvocationsCurrent\x18\a \x01(\x05H\x03R\x12InvocationsCurrent\x88\x01\x01\x12/\n" +
	"\x10InvocationsTotal\x18\b \x01(\x05H\x04R\x10InvocationsTotal\x88\x01\x01\x1a\\\n" +
	"\x10DeploymentsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.macropod.DeploymentMetadataR\x05value:\x028\x01B\x13\n" +
	"\x11_DeploymentsTotalB\x10\n" +
	"\x0e_LatestVersionB\x0e\n" +
	"\f_LastUpdatedB\x15\n" +
	"\x13_InvocationsCurrentB\x13\n" +
	"\x11_InvocationsTotal\"\xcd\x02\n" +
	"\x17WorkflowIngressMetadata\x12\"\n" +
	"\fWorkflowName\x18\x01 \x01(\tR\fWorkflowName\x12N\n" +
	"\tIngresses\x18\x02 \x03(\v20.macropod.WorkflowIngressMetadata.IngressesEntryR\tIngresses\x12E\n" +
	"\x06Labels\x18\x03 \x03(\v2-.macropod.WorkflowIngressMetadata.LabelsEntryR\x06Labels\x1a<\n" +
	"\x0eIngressesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf1\x02\n" +
	"\x17FunctionIngressMetadata\x12\"\n" +
	"\fFunctionName\x18\x01 \x01(\tR\fFunctionName\x12\"\n" +
	"\fWorkflowName\x18\x02 \x01(\tR\fWorkflowName\x12N\n" +
	"\tIngresses\x18\x03 \x03(\v20.macropod.FunctionIngressMetadata.IngressesEntryR\tIngresses\x12E\n" +
	"\x06Labels\x18\x04 \x03(\v2-.macropod.FunctionIngressMetadata.LabelsEntryR\x06Labels\x1a<\n" +
	"\x0eIngressesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x89\x01\n" +
	"\x13NodeMetricsMetadata\x12\x10\n" +
	"\x03CPU\x18\x01 \x01(\x01R\x03CPU\x12\x16\n" +
	"\x06Memory\x18\x02 \x01(\x01R\x06Memory\x12 \n" +
	"\vCPUCapacity\x18\x03 \x01(\x01R\vCPUCapacity\x12&\n" +
	"\x0eMemoryCapacity\x18\x04 \x01(\x01R\x0eMemoryCapacity\"\xb5\x06\n" +
	"\x10MacroPodManifest\x12G\n" +
	"\tWorkflows\x18\x01 \x03(\v2).macropod.MacroPodManifest.WorkflowsEntryR\tWorkflows\x12_\n" +
	"\x11WorkflowIngresses\x18\x02 \x03(\v21.macropod.MacroPodManifest.WorkflowIngressesEntryR\x11WorkflowIngresses\x12_\n" +
	"\x11FunctionIngresses\x18\x03 \x03(\v21.macropod.MacroPodManifest.FunctionIngressesEntryR\x11FunctionIngresses\x12M\n" +
	"\vNodeMetrics\x18\x04 \x03(\v2+.macropod.MacroPodManifest.NodeMetricsEntryR\vNodeMetrics\x12<\n" +
	"\rDefaultConfig\x18\x05 \x01(\v2\x16.macropod.ConfigStructR\rDefaultConfig\x1aX\n" +
	"\x0eWorkflowsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x120\n" +
	"\x05value\x18\x02 \x01(\v2\x1a.macropod.WorkflowMetadataR\x05value:\x028\x01\x1ag\n" +
	"\x16WorkflowIngressesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x127\n" +
	"\x05value\x18\x02 \x01(\v2!.macropod.WorkflowIngressMetadataR\x05value:\x028\x01\x1ag\n" +
	"\x16FunctionIngressesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x127\n" +
	"\x05value\x18\x02 \x01(\v2!.macropod.FunctionIngressMetadataR\x05value:\x028\x01\x1a]\n" +
	"\x10NodeMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x123\n" +
	"\x05value\x18\x02 \x01(\v2\x1d.macropod.NodeMetricsMetadataR\x05value:\x028\x01\"V\n" +
	"\rMacroPodReply\x12\x19\n" +
	"\x05Reply\x18\x01 \x01(\tH\x00R\x05Reply\x88\x01\x01\x12\x17\n" +
	"\x04Code\x18\x02 \x01(\x05H\x01R\x04Code\x88\x01\x01B\b\n" +
	"\x06_ReplyB\a\n" +
	"\x05_Code\"\xbc\x02\n" +
	"\x0fFunctionRequest\x12\x1f\n" +
	"\bFunction\x18\x01 \x01(\tH\x00R\bFunction\x88\x01\x01\x12\x17\n" +
	"\x04Text\x18\x02 \x01(\tH\x01R\x04Text\x88\x01\x01\x120\n" +
	"\x04JSON\x18\x03 \x01(\v2\x17.google.protobuf.StructH\x02R\x04JSON\x88\x01\x01\x12\x17\n" +
	"\x04Data\x18\x04 \x01(\fH\x03R\x04Data\x88\x01\x01\x12#\n" +
	"\n" +
	"WorkflowID\x18\x05 \x01(\tH\x04R\n" +
	"WorkflowID\x88\x01\x01\x12\x19\n" +
	"\x05Depth\x18\x06 \x01(\x05H\x05R\x05Depth\x88\x01\x01\x12\x19\n" +
	"\x05Width\x18\a \x01(\x05H\x06R\x05Width\x88\x01\x01B\v\n" +
	"\t_FunctionB\a\n" +
	"\x05_TextB\a\n" +
	"\x05_JSONB\a\n" +
	"\x05_DataB\r\n" +
	"\v_WorkflowIDB\b\n" +
	"\x06_DepthB\b\n" +
	"\x06_Width\"Z\n" +
	"\x0fDeployerRequest\x12\"\n" +
	"\fWorkflowName\x18\x01 \x01(\tR\fWorkflowName\x12\x19\n" +
	"\x05Label\x18\x02 \x01(\tH\x00R\x05Label\x88\x01\x01B\b\n" +
	"\x06_Label\"\xb3\x01\n" +
	"\x0eIngressRequest\x12\"\n" +
	"\fWorkflowName\x18\x01 \x01(\tR\fWorkflowName\x12\x17\n" +
	"\x04Text\x18\x02 \x01(\tH\x00R\x04Text\x88\x01\x01\x120\n" +
	"\x04JSON\x18\x03 \x01(\v2\x17.google.protobuf.StructH\x01R\x04JSON\x88\x01\x01\x12\x17\n" +
	"\x04Data\x18\x04 \x01(\fH\x02R\x04Data\x88\x01\x01B\a\n" +
	"\x05_TextB\a\n" +
	"\x05_JSONB\a\n" +
	"\x05_Data\"$\n" +
	"\x12IngressEvalRequest\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\"\xa6\x01\n" +
	"\x18DeploymentServiceRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\"\n" +
	"\ffunctionCall\x18\x02 \x01(\tR\ffunctionCall\x12$\n" +
	"\rreplicaNumber\x18\x03 \x01(\x05R\rreplicaNumber\x12\x1f\n" +
	"\bworkflow\x18\x04 \x01(\tH\x00R\bworkflow\x88\x01\x01B\v\n" +
	"\t_workflow\"2\n" +
	"\x16DeploymentServiceReply\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage2P\n" +
	"\x10MacroPodFunction\x12<\n" +
	"\x06Invoke\x12\x19.macropod.FunctionRequest\x1a\x17.macropod.MacroPodReply2\x8d\x05\n" +
	"\x10MacroPodDeployer\x12R\n" +
	"\n" +
	"Deployment\x12\".macropod.DeploymentServiceRequest\x1a .macropod.DeploymentServiceReply\x129\n" +
	"\x06Config\x12\x16.macropod.ConfigStruct\x1a\x17.macropod.MacroPodReply\x12C\n" +
	"\x0eCreateWorkflow\x12\x18.macropod.WorkflowStruct\x1a\x17.macropod.MacroPodReply\x12C\n" +
	"\x0eUpdateWorkflow\x12\x18.macropod.WorkflowStruct\x1a\x17.macropod.MacroPodReply\x12D\n" +
	"\x0eDeleteWorkflow\x12\x19.macropod.DeployerRequest\x1a\x17.macropod.MacroPodReply\x12G\n" +
	"\x11UpdateDeployments\x12\x19.macropod.DeployerRequest\x1a\x17.macropod.MacroPodReply\x12F\n" +
	"\x10CreateDeployment\x12\x19.macropod.DeployerRequest\x1a\x17.macropod.MacroPodReply\x12?\n" +
	"\tTTLDelete\x12\x19.macropod.DeployerRequest\x1a\x17.macropod.MacroPodReply\x12H\n" +
	"\x0eUpdateManifest\x12\x1a.macropod.MacroPodManifest\x1a\x1a.macropod.MacroPodManifest2\xb3\x05\n" +
	"\x0fMacroPodIngress\x129\n" +
	"\x06Config\x12\x16.macropod.ConfigStruct\x1a\x17.macropod.MacroPodReply\x12C\n" +
	"\x0eWorkflowInvoke\x12\x18.macropod.IngressRequest\x1a\x17.macropod.MacroPodReply\x12D\n" +
	"\x0eFunctionInvoke\x12\x19.macropod.FunctionRequest\x1a\x17.macropod.MacroPodReply\x12C\n" +
	"\x0eCreateWorkflow\x12\x18.macropod.WorkflowStruct\x1a\x17.macropod.MacroPodReply\x12C\n" +
	"\x0eUpdateWorkflow\x12\x18.macropod.WorkflowStruct\x1a\x17.macropod.MacroPodReply\x12C\n" +
	"\x0eDeleteWorkflow\x12\x18.macropod.IngressRequest\x1a\x17.macropod.MacroPodReply\x129\n" +
	"\x04Eval\x12\x18.macropod.WorkflowStruct\x1a\x17.macropod.MacroPodReply\x12D\n" +
	"\vEvalMetrics\x12\x1c.macropod.IngressEvalRequest\x1a\x17.macropod.MacroPodReply\x12D\n" +
	"\vEvalLatency\x12\x1c.macropod.IngressEvalRequest\x1a\x17.macropod.MacroPodReply\x12D\n" +
	"\vEvalSummary\x12\x1c.macropod.IngressEvalRequest\x1a\x17.macropod.MacroPodReplyB\x0fZ\r./macropod_pbb\x06proto3"

var (
	file_macropod_proto_rawDescOnce sync.Once
	file_macropod_proto_rawDescData []byte
)

func file_macropod_proto_rawDescGZIP() []byte {
	file_macropod_proto_rawDescOnce.Do(func() {
		file_macropod_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_macropod_proto_rawDesc), len(file_macropod_proto_rawDesc)))
	})
	return file_macropod_proto_rawDescData
}

var file_macropod_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_macropod_proto_goTypes = []any{
	(*FunctionStruct)(nil),           // 0: macropod.FunctionStruct
	(*ConfigStruct)(nil),             // 1: macropod.ConfigStruct
	(*EvalStruct)(nil),               // 2: macropod.EvalStruct
	(*WorkflowStruct)(nil),           // 3: macropod.WorkflowStruct
	(*PodMetadata)(nil),              // 4: macropod.PodMetadata
	(*DeploymentMetadata)(nil),       // 5: macropod.DeploymentMetadata
	(*WorkflowMetadata)(nil),         // 6: macropod.WorkflowMetadata
	(*WorkflowIngressMetadata)(nil),  // 7: macropod.WorkflowIngressMetadata
	(*FunctionIngressMetadata)(nil),  // 8: macropod.FunctionIngressMetadata
	(*NodeMetricsMetadata)(nil),      // 9: macropod.NodeMetricsMetadata
	(*MacroPodManifest)(nil),         // 10: macropod.MacroPodManifest
	(*MacroPodReply)(nil),            // 11: macropod.MacroPodReply
	(*FunctionRequest)(nil),          // 12: macropod.FunctionRequest
	(*DeployerRequest)(nil),          // 13: macropod.DeployerRequest
	(*IngressRequest)(nil),           // 14: macropod.IngressRequest
	(*IngressEvalRequest)(nil),       // 15: macropod.IngressEvalRequest
	(*DeploymentServiceRequest)(nil), // 16: macropod.DeploymentServiceRequest
	(*DeploymentServiceReply)(nil),   // 17: macropod.DeploymentServiceReply
	nil,                              // 18: macropod.FunctionStruct.EndpointsEntry
	nil,                              // 19: macropod.FunctionStruct.EnvsEntry
	nil,                              // 20: macropod.FunctionStruct.SecretsEntry
	nil,                              // 21: macropod.WorkflowStruct.FunctionsEntry
	nil,                              // 22: macropod.WorkflowMetadata.DeploymentsEntry
	nil,                              // 23: macropod.WorkflowIngressMetadata.IngressesEntry
	nil,                              // 24: macropod.WorkflowIngressMetadata.LabelsEntry
	nil,                              // 25: macropod.FunctionIngressMetadata.IngressesEntry
	nil,                              // 26: macropod.FunctionIngressMetadata.LabelsEntry
	nil,                              // 27: macropod.MacroPodManifest.WorkflowsEntry
	nil,                              // 28: macropod.MacroPodManifest.WorkflowIngressesEntry
	nil,                              // 29: macropod.MacroPodManifest.FunctionIngressesEntry
	nil,                              // 30: macropod.MacroPodManifest.NodeMetricsEntry
	(*structpb.Struct)(nil),          // 31: google.protobuf.Struct
	(*timestamppb.Timestamp)(nil),    // 32: google.protobuf.Timestamp
}
var file_macropod_proto_depIdxs = []int32{
	18, // 0: macropod.FunctionStruct.Endpoints:type_name -> macropod.FunctionStruct.EndpointsEntry
	19, // 1: macropod.FunctionStruct.Envs:type_name -> macropod.FunctionStruct.EnvsEntry
	20, // 2: macropod.FunctionStruct.Secrets:type_name -> macropod.FunctionStruct.SecretsEntry
	21, // 3: macropod.WorkflowStruct.Functions:type_name -> macropod.WorkflowStruct.FunctionsEntry
	31, // 4: macropod.WorkflowStruct.JSON:type_name -> google.protobuf.Struct
	1,  // 5: macropod.WorkflowStruct.Config:type_name -> macropod.ConfigStruct
	2,  // 6: macropod.WorkflowStruct.Eval:type_name -> macropod.EvalStruct
	4,  // 7: macropod.DeploymentMetadata.Pods:type_name -> macropod.PodMetadata
	32, // 8: macropod.DeploymentMetadata.LastUsed:type_name -> google.protobuf.Timestamp
	3,  // 9: macropod.WorkflowMetadata.Workflow:type_name -> macropod.WorkflowStruct
	5,  // 10: macropod.WorkflowMetadata.DeploymentConfig:type_name -> macropod.DeploymentMetadata
	22, // 11: macropod.WorkflowMetadata.Deployments:type_name -> macropod.WorkflowMetadata.DeploymentsEntry
	32, // 12: macropod.WorkflowMetadata.LastUpdated:type_name -> google.protobuf.Timestamp
	23, // 13: macropod.WorkflowIngressMetadata.Ingresses:type_name -> macropod.WorkflowIngressMetadata.IngressesEntry
	24, // 14: macropod.WorkflowIngressMetadata.Labels:type_name -> macropod.WorkflowIngressMetadata.LabelsEntry
	25, // 15: macropod.FunctionIngressMetadata.Ingresses:type_name -> macropod.FunctionIngressMetadata.IngressesEntry
	26, // 16: macropod.FunctionIngressMetadata.Labels:type_name -> macropod.FunctionIngressMetadata.LabelsEntry
	27, // 17: macropod.MacroPodManifest.Workflows:type_name -> macropod.MacroPodManifest.WorkflowsEntry
	28, // 18: macropod.MacroPodManifest.WorkflowIngresses:type_name -> macropod.MacroPodManifest.WorkflowIngressesEntry
	29, // 19: macropod.MacroPodManifest.FunctionIngresses:type_name -> macropod.MacroPodManifest.FunctionIngressesEntry
	30, // 20: macropod.MacroPodManifest.NodeMetrics:type_name -> macropod.MacroPodManifest.NodeMetricsEntry
	1,  // 21: macropod.MacroPodManifest.DefaultConfig:type_name -> macropod.ConfigStruct
	31, // 22: macropod.FunctionRequest.JSON:type_name -> google.protobuf.Struct
	31, // 23: macropod.IngressRequest.JSON:type_name -> google.protobuf.Struct
	0,  // 24: macropod.WorkflowStruct.FunctionsEntry.value:type_name -> macropod.FunctionStruct
	5,  // 25: macropod.WorkflowMetadata.DeploymentsEntry.value:type_name -> macropod.DeploymentMetadata
	6,  // 26: macropod.MacroPodManifest.WorkflowsEntry.value:type_name -> macropod.WorkflowMetadata
	7,  // 27: macropod.MacroPodManifest.WorkflowIngressesEntry.value:type_name -> macropod.WorkflowIngressMetadata
	8,  // 28: macropod.MacroPodManifest.FunctionIngressesEntry.value:type_name -> macropod.FunctionIngressMetadata
	9,  // 29: macropod.MacroPodManifest.NodeMetricsEntry.value:type_name -> macropod.NodeMetricsMetadata
	12, // 30: macropod.MacroPodFunction.Invoke:input_type -> macropod.FunctionRequest
	16, // 31: macropod.MacroPodDeployer.Deployment:input_type -> macropod.DeploymentServiceRequest
	1,  // 32: macropod.MacroPodDeployer.Config:input_type -> macropod.ConfigStruct
	3,  // 33: macropod.MacroPodDeployer.CreateWorkflow:input_type -> macropod.WorkflowStruct
	3,  // 34: macropod.MacroPodDeployer.UpdateWorkflow:input_type -> macropod.WorkflowStruct
	13, // 35: macropod.MacroPodDeployer.DeleteWorkflow:input_type -> macropod.DeployerRequest
	13, // 36: macropod.MacroPodDeployer.UpdateDeployments:input_type -> macropod.DeployerRequest
	13, // 37: macropod.MacroPodDeployer.CreateDeployment:input_type -> macropod.DeployerRequest
	13, // 38: macropod.MacroPodDeployer.TTLDelete:input_type -> macropod.DeployerRequest
	10, // 39: macropod.MacroPodDeployer.UpdateManifest:input_type -> macropod.MacroPodManifest
	1,  // 40: macropod.MacroPodIngress.Config:input_type -> macropod.ConfigStruct
	14, // 41: macropod.MacroPodIngress.WorkflowInvoke:input_type -> macropod.IngressRequest
	12, // 42: macropod.MacroPodIngress.FunctionInvoke:input_type -> macropod.FunctionRequest
	3,  // 43: macropod.MacroPodIngress.CreateWorkflow:input_type -> macropod.WorkflowStruct
	3,  // 44: macropod.MacroPodIngress.UpdateWorkflow:input_type -> macropod.WorkflowStruct
	14, // 45: macropod.MacroPodIngress.DeleteWorkflow:input_type -> macropod.IngressRequest
	3,  // 46: macropod.MacroPodIngress.Eval:input_type -> macropod.WorkflowStruct
	15, // 47: macropod.MacroPodIngress.EvalMetrics:input_type -> macropod.IngressEvalRequest
	15, // 48: macropod.MacroPodIngress.EvalLatency:input_type -> macropod.IngressEvalRequest
	15, // 49: macropod.MacroPodIngress.EvalSummary:input_type -> macropod.IngressEvalRequest
	11, // 50: macropod.MacroPodFunction.Invoke:output_type -> macropod.MacroPodReply
	17, // 51: macropod.MacroPodDeployer.Deployment:output_type -> macropod.DeploymentServiceReply
	11, // 52: macropod.MacroPodDeployer.Config:output_type -> macropod.MacroPodReply
	11, // 53: macropod.MacroPodDeployer.CreateWorkflow:output_type -> macropod.MacroPodReply
	11, // 54: macropod.MacroPodDeployer.UpdateWorkflow:output_type -> macropod.MacroPodReply
	11, // 55: macropod.MacroPodDeployer.DeleteWorkflow:output_type -> macropod.MacroPodReply
	11, // 56: macropod.MacroPodDeployer.UpdateDeployments:output_type -> macropod.MacroPodReply
	11, // 57: macropod.MacroPodDeployer.CreateDeployment:output_type -> macropod.MacroPodReply
	11, // 58: macropod.MacroPodDeployer.TTLDelete:output_type -> macropod.MacroPodReply
	10, // 59: macropod.MacroPodDeployer.UpdateManifest:output_type -> macropod.MacroPodManifest
	11, // 60: macropod.MacroPodIngress.Config:output_type -> macropod.MacroPodReply
	11, // 61: macropod.MacroPodIngress.WorkflowInvoke:output_type -> macropod.MacroPodReply
	11, // 62: macropod.MacroPodIngress.FunctionInvoke:output_type -> macropod.MacroPodReply
	11, // 63: macropod.MacroPodIngress.CreateWorkflow:output_type -> macropod.MacroPodReply
	11, // 64: macropod.MacroPodIngress.UpdateWorkflow:output_type -> macropod.MacroPodReply
	11, // 65: macropod.MacroPodIngress.DeleteWorkflow:output_type -> macropod.MacroPodReply
	11, // 66: macropod.MacroPodIngress.Eval:output_type -> macropod.MacroPodReply
	11, // 67: macropod.MacroPodIngress.EvalMetrics:output_type -> macropod.MacroPodReply
	11, // 68: macropod.MacroPodIngress.EvalLatency:output_type -> macropod.MacroPodReply
	11, // 69: macropod.MacroPodIngress.EvalSummary:output_type -> macropod.MacroPodReply
	50, // [50:70] is the sub-list for method output_type
	30, // [30:50] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_macropod_proto_init() }
func file_macropod_proto_init() {
	if File_macropod_proto != nil {
		return
	}
	file_macropod_proto_msgTypes[1].OneofWrappers = []any{}
	file_macropod_proto_msgTypes[2].OneofWrappers = []any{}
	file_macropod_proto_msgTypes[3].OneofWrappers = []any{}
	file_macropod_proto_msgTypes[4].OneofWrappers = []any{}
	file_macropod_proto_msgTypes[5].OneofWrappers = []any{}
	file_macropod_proto_msgTypes[6].OneofWrappers = []any{}
	file_macropod_proto_msgTypes[11].OneofWrappers = []any{}
	file_macropod_proto_msgTypes[12].OneofWrappers = []any{}
	file_macropod_proto_msgTypes[13].OneofWrappers = []any{}
	file_macropod_proto_msgTypes[14].OneofWrappers = []any{}
	file_macropod_proto_msgTypes[16].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_macropod_proto_rawDesc), len(file_macropod_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_macropod_proto_goTypes,
		DependencyIndexes: file_macropod_proto_depIdxs,
		MessageInfos:      file_macropod_proto_msgTypes,
	}.Build()
	File_macropod_proto = out.File
	file_macropod_proto_goTypes = nil
	file_macropod_proto_depIdxs = nil
}
